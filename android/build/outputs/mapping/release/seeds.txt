com.mrfield.flappygremlin.AndroidLauncher
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap
com.badlogic.gdx.utils.BufferUtils
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size
com.badlogic.gdx.math.Matrix4
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face
com.badlogic.gdx.graphics.g2d.freetype.FreeType
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker
com.badlogic.gdx.graphics.glutils.ETC1
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Glyph
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot
com.badlogic.gdx.utils.ObjectMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String)
com.badlogic.gdx.utils.Array: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char)
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType[] values()
com.badlogic.gdx.graphics.glutils.GLVersion$Type: com.badlogic.gdx.graphics.glutils.GLVersion$Type[] values()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getAscender(long)
com.badlogic.gdx.utils.Array: void removeRange(int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getFaceFlags(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$Hinting: com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$Hinting[] values()
com.badlogic.gdx.utils.ObjectIntMap$Entries: com.badlogic.gdx.utils.ObjectIntMap$Entry next()
com.badlogic.gdx.utils.BufferUtils: void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Glyph: int getTop(long)
com.badlogic.gdx.utils.Array: java.lang.String toString()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getHeight(long)
com.badlogic.gdx.graphics.glutils.GLVersion$Type: com.badlogic.gdx.graphics.glutils.GLVersion$Type valueOf(java.lang.String)
com.mrfield.flappygremlin.FlappyGremlin: void dispose()
com.badlogic.gdx.utils.ObjectMap: java.lang.String toString(java.lang.String,boolean)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getDescender(long)
com.badlogic.gdx.utils.LongMap: java.lang.Object get(long,java.lang.Object)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getPixelMode(long)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: BitmapFontCache(com.badlogic.gdx.graphics.g2d.BitmapFont,boolean)
com.badlogic.gdx.utils.LongMap: void resize(int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getRows(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getWidth(long)
com.badlogic.gdx.utils.ObjectIntMap: void resize(int)
com.badlogic.gdx.Input$OnscreenKeyboardType: com.badlogic.gdx.Input$OnscreenKeyboardType valueOf(java.lang.String)
com.badlogic.gdx.utils.ObjectIntMap: int hashCode()
com.badlogic.gdx.graphics.g2d.GlyphLayout: void calculateWidths(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData)
com.badlogic.gdx.Input$OnscreenKeyboardType: com.badlogic.gdx.Input$OnscreenKeyboardType[] values()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getMaxAdvanceWidth(long)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.nio.ByteBuffer newPixmap(long[],int,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void clear()
com.badlogic.gdx.utils.LongMap$Entries: com.badlogic.gdx.utils.LongMap$Entry next()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library: long strokerNew(long)
com.badlogic.gdx.utils.ObjectMap: void resize(int)
com.badlogic.gdx.utils.OrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.badlogic.gdx.graphics.VertexAttributes: int hashCode()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker: void set(long,int,int,int,int)
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap[] values()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawPixmap(long,long,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getNumGlyphs(long)
com.badlogic.gdx.utils.ObjectMap$Keys: java.lang.Object next()
com.badlogic.gdx.utils.Array: java.lang.Object pop()
com.badlogic.gdx.utils.Array: boolean removeValue(java.lang.Object,boolean)
com.badlogic.gdx.graphics.VertexAttributes: int compareTo(com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.utils.LongMap: void putResize(long,java.lang.Object)
com.badlogic.gdx.utils.LongMap: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void setPixel(long,int,int,int)
com.badlogic.gdx.utils.ObjectMap$Entries: com.badlogic.gdx.utils.ObjectMap$Entry next()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Glyph: int getLeft(long)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void requirePageGlyphs(int,int)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph)
com.badlogic.gdx.utils.BufferUtils: void copyJni(float[],java.nio.Buffer,int,int)
com.badlogic.gdx.utils.ObjectMap: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.Array$ArrayIterator: java.lang.Object next()
com.badlogic.gdx.utils.BufferUtils: java.nio.ByteBuffer newDisposableByteBuffer(int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.lang.String getFailureReason()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library: long newMemoryFace(long,java.nio.ByteBuffer,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: int getWrapIndex(com.badlogic.gdx.utils.Array,int)
com.badlogic.gdx.utils.Array: void addAll(java.lang.Object[],int,int)
com.badlogic.gdx.utils.LongMap: java.lang.String toString()
com.badlogic.gdx.utils.ObjectIntMap: void put(java.lang.Object,int)
com.mrfield.flappygremlin.FlappyGremlin: void render()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void fetchUniforms()
com.badlogic.gdx.utils.SnapshotArray: void end()
com.badlogic.gdx.graphics.g2d.freetype.FreeType: long initFreeTypeJni()
com.badlogic.gdx.graphics.VertexAttributes: long getMask()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Glyph: long getBitmap(long)
com.badlogic.gdx.graphics.glutils.ETC1: boolean isValidPKM(java.nio.ByteBuffer,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: long getGlyph(long)
com.badlogic.gdx.utils.Array: void clear()
com.badlogic.gdx.utils.LongMap: java.lang.Object put(long,java.lang.Object)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$Hinting: com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$Hinting valueOf(java.lang.String)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: java.nio.ByteBuffer getBuffer(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Glyph: long strokeBorder(long,long,boolean)
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType[] values()
com.badlogic.gdx.utils.ObjectIntMap: void putResize(java.lang.Object,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void setBlend(long,int)
com.badlogic.gdx.utils.LongMap$MapIterator: void remove()
com.badlogic.gdx.utils.ObjectMap: java.lang.Object get(java.lang.Object,java.lang.Object)
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation[] values()
com.badlogic.gdx.utils.ObjectIntMap: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getHeight(long)
com.mrfield.flappygremlin.AndroidLauncher: AndroidLauncher()
com.badlogic.gdx.utils.Array: java.lang.Object removeIndex(int)
com.badlogic.gdx.graphics.g2d.BitmapFont: void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData)
com.badlogic.gdx.utils.ObjectMap$MapIterator: void findNextIndex()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: java.lang.Object next()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Glyph: long toBitmap(long,int)
com.badlogic.gdx.utils.LongMap: java.lang.Object remove(long)
com.badlogic.gdx.utils.BufferUtils: void copyJni(byte[],int,java.nio.Buffer,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void fetchAttributes()
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType[] values()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: boolean setPixelSizes(long,int,int)
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter[] values()
com.badlogic.gdx.utils.ObjectMap: java.lang.Object get(java.lang.Object)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int getLastErrorCode()
com.badlogic.gdx.utils.LongMap: int hashCode()
com.badlogic.gdx.graphics.VertexAttributes: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectMap: void putResize(java.lang.Object,java.lang.Object)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size: long getMetrics(long)
com.badlogic.gdx.utils.LongMap: java.lang.Object get(long)
com.badlogic.gdx.utils.ObjectMap: int locateKey(java.lang.Object)
com.badlogic.gdx.utils.Array: java.lang.Object peek()
com.badlogic.gdx.utils.Array: java.lang.Object[] resize(int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: long getGlyph(long)
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: void remove()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void requireGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout)
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Glyph: void done(long)
com.badlogic.gdx.utils.SnapshotArray: void modified()
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending[] values()
com.badlogic.gdx.utils.ObjectIntMap: java.lang.String toString(java.lang.String,boolean)
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation valueOf(java.lang.String)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: boolean hasKerning(long)
com.badlogic.gdx.utils.Array: boolean contains(java.lang.Object,boolean)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getPitch(long)
com.badlogic.gdx.utils.ObjectMap: int hashCode()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void free(long)
com.badlogic.gdx.utils.Array: void addAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.VertexAttributes: boolean equals(java.lang.Object)
com.mrfield.flappygremlin.FlappyGremlin: void reset()
com.badlogic.gdx.graphics.VertexAttributes: int size()
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType valueOf(java.lang.String)
com.badlogic.gdx.graphics.VertexAttributes: com.badlogic.gdx.graphics.VertexAttribute get(int)
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object remove(java.lang.Object)
com.badlogic.gdx.graphics.g2d.GlyphLayout: void alignRuns(float,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker: void done(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library: void doneFreeType(long)
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String)
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter[] values()
com.badlogic.gdx.utils.Array: java.lang.Object get(int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: boolean loadChar(long,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData,com.badlogic.gdx.utils.Array,boolean)
com.badlogic.gdx.utils.Array: void truncate(int)
com.badlogic.gdx.utils.Array: void add(java.lang.Object)
com.badlogic.gdx.utils.LongMap$Values: java.lang.Object next()
com.badlogic.gdx.utils.Array: Array(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.nio.ByteBuffer load(long[],byte[],int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void clear(long,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getFormat(long)
com.badlogic.gdx.graphics.glutils.ETC1: void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1: int getWidthPKM(java.nio.ByteBuffer,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: long getMetrics(long)
com.badlogic.gdx.utils.Array: void addAll(com.badlogic.gdx.utils.Array,int,int)
com.badlogic.gdx.utils.SnapshotArray: java.lang.Object[] begin()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: long getSize(long)
com.badlogic.gdx.utils.Array: int hashCode()
com.badlogic.gdx.graphics.glutils.ETC1: int getHeightPKM(java.nio.ByteBuffer,int)
com.badlogic.gdx.utils.ObjectMap: void clear()
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType[] values()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void setPageCount(int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float)
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String)
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter valueOf(java.lang.String)
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable: java.util.Iterator iterator()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getPixel(long,int,int)
com.badlogic.gdx.graphics.VertexAttributes: java.lang.String toString()
com.mrfield.flappygremlin.FlappyGremlin: void create()
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format[] values()
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: void findNextIndex()
com.badlogic.gdx.utils.BufferUtils: void freeMemory(java.nio.ByteBuffer)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void addToCache(com.badlogic.gdx.graphics.g2d.GlyphLayout,float,float)
com.badlogic.gdx.graphics.VertexAttributes: int calculateOffsets()
com.badlogic.gdx.utils.Array: java.lang.Object[] ensureCapacity(int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getHoriAdvance(long)
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String)
com.badlogic.gdx.utils.ObjectIntMap: int locateKey(java.lang.Object)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: void doneFace(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getKerning(long,int,int,int)
com.badlogic.gdx.utils.ObjectMap$MapIterator: void remove()
com.badlogic.gdx.backends.android.AndroidApplication: AndroidApplication()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: boolean hasNext()
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String)
com.badlogic.gdx.utils.Array: java.lang.Object first()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getCharIndex(long,int)
